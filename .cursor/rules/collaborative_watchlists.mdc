# üé¨ **REGLAS DE WATCHLISTS COLABORATIVAS**

## **‚ö†Ô∏è CONTEXTO CR√çTICO**

- **Aplicaci√≥n en PRODUCCI√ìN con usuarios reales**
- **Funcionalidad colaborativa de watchlists**
- **NUNCA romper la funcionalidad existente de colaboraci√≥n**

---

## **üîí PRINCIPIOS DE COLABORACI√ìN**

### **‚úÖ ROLES Y PERMISOS:**

#### **CREADOR DE LA LISTA (Owner):**

- **Acceso completo** a su watchlist
- **Crear, editar, actualizar y eliminar** la lista
- **Agregar y eliminar pel√≠culas** (propias y de otros)
- **Gestionar colaboradores** (agregar, eliminar, cambiar roles)
- **Control total** sobre la lista

#### **COLABORADORES (Members):**

- **Ver** todas las pel√≠culas de la lista
- **Agregar pel√≠culas** a la lista
- **Eliminar solo las pel√≠culas que ellos agregaron**
- **NO pueden** eliminar pel√≠culas de otros colaboradores
- **NO pueden** gestionar la lista (editar nombre, descripci√≥n, etc.)
- **NO pueden** gestionar otros colaboradores

---

## **üõ°Ô∏è POL√çTICAS RLS REQUERIDAS**

### **‚úÖ Watchlists:**

```sql
-- Solo propietarios pueden ver/editar/eliminar sus propias watchlists
CREATE POLICY "watchlists_owner_full_access" ON public.watchlists
    FOR ALL USING (auth.uid() = owner_id);
```

### **‚úÖ Watchlist_movies:**

```sql
-- Creador: acceso completo a todas las pel√≠culas de sus listas
CREATE POLICY "watchlist_movies_owner_full_access" ON public.watchlist_movies
    FOR ALL USING (
        EXISTS (
            SELECT 1 FROM public.watchlists
            WHERE id = watchlist_movies.watchlist_id
            AND owner_id = auth.uid()
        )
    );

-- Colaboradores: solo pueden ver, agregar y eliminar pel√≠culas
CREATE POLICY "watchlist_movies_collaborator_access" ON public.watchlist_movies
    FOR SELECT USING (
        EXISTS (
            SELECT 1 FROM public.watchlist_collaborators
            WHERE watchlist_id = watchlist_movies.watchlist_id
            AND user_id = auth.uid()
        )
    );

CREATE POLICY "watchlist_movies_collaborator_insert" ON public.watchlist_movies
    FOR INSERT WITH CHECK (
        auth.uid() = added_by AND
        EXISTS (
            SELECT 1 FROM public.watchlist_collaborators
            WHERE watchlist_id = watchlist_movies.watchlist_id
            AND user_id = auth.uid()
        )
    );

CREATE POLICY "watchlist_movies_collaborator_delete" ON public.watchlist_movies
    FOR DELETE USING (
        auth.uid() = added_by AND
        EXISTS (
            SELECT 1 FROM public.watchlist_collaborators
            WHERE watchlist_id = watchlist_movies.watchlist_id
            AND user_id = auth.uid()
        )
    );
```

### **‚úÖ Watchlist_members:**

```sql
-- Solo propietarios pueden gestionar miembros
CREATE POLICY "watchlist_members_owner_only" ON public.watchlist_members
    FOR ALL USING (
        EXISTS (
            SELECT 1 FROM public.watchlists
            WHERE id = watchlist_members.watchlist_id
            AND owner_id = auth.uid()
        )
    );
```

---

## **üîç VALIDACI√ìN DE FUNCIONALIDAD**

### **Checklist obligatorio antes de modificar:**

- [ ] **¬øEl creador mantiene acceso completo a sus listas?** ‚Üí ‚úÖ Verificar
- [ ] **¬øLos colaboradores pueden agregar pel√≠culas?** ‚Üí ‚úÖ Verificar
- [ ] **¬øLos colaboradores pueden eliminar solo sus pel√≠culas?** ‚Üí ‚úÖ Verificar
- [ ] **¬øEl creador puede eliminar cualquier pel√≠cula?** ‚Üí ‚úÖ Verificar
- [ ] **¬øSe mantiene la funcionalidad colaborativa?** ‚Üí ‚úÖ Verificar

### **Funcionalidades cr√≠ticas identificadas:**

```typescript
// Funcionalidades del CREADOR:
- Crear watchlists
- Editar nombre y descripci√≥n de watchlists
- Eliminar watchlists
- Agregar pel√≠culas a la lista
- Eliminar cualquier pel√≠cula (propias y de otros)
- Agregar colaboradores
- Eliminar colaboradores
- Cambiar roles de colaboradores

// Funcionalidades de COLABORADORES:
- Ver todas las pel√≠culas de la lista
- Agregar pel√≠culas a la lista
- Eliminar solo las pel√≠culas que ellos agregaron
- Ver informaci√≥n de la lista (nombre, descripci√≥n)
```

---

## **üö® ALERTAS CR√çTICAS**

### **Si detectas estos patrones, DETENER inmediatamente:**

- Pol√≠ticas que impidan al creador eliminar pel√≠culas de otros
- Pol√≠ticas que permitan a colaboradores eliminar pel√≠culas de otros
- Pol√≠ticas que impidan a colaboradores agregar pel√≠culas
- Pol√≠ticas que permitan a colaboradores gestionar la lista
- Recursi√≥n infinita en pol√≠ticas RLS

### **Comandos de emergencia:**

- **Detener desarrollo** si hay riesgo de romper colaboraci√≥n
- **Informar al usuario** sobre cualquier cambio que pueda afectar colaboraci√≥n
- **Sugerir testing** antes de implementar cambios
- **Validar funcionalidad colaborativa** antes de proceder

---

## **üí° MEJORES PR√ÅCTICAS**

### **Para nuevas funcionalidades:**

1. **Mantener roles claros** (creador vs colaborador)
2. **Preservar permisos existentes** sin modificarlos
3. **Agregar funcionalidades opcionales** para colaboradores
4. **Probar funcionalidad colaborativa** antes de implementar

### **Para pol√≠ticas RLS:**

1. **Evitar recursi√≥n infinita** en consultas
2. **Usar consultas simples** y directas
3. **Verificar que no bloqueen acceso existente**
4. **Probar pol√≠ticas** en entorno de desarrollo

### **Para testing:**

1. **Probar como creador** de la lista
2. **Probar como colaborador** de la lista
3. **Verificar permisos** de cada rol
4. **Validar que no se rompa funcionalidad existente**

---

## **üîß FUNCIONALIDADES FUTURAS**

### **Espacio reservado para mejoras:**

- **Roles avanzados** para colaboradores (moderador, editor, etc.)
- **Permisos granulares** por funcionalidad
- **Historial de cambios** en la lista
- **Notificaciones** para colaboradores
- **Comentarios** en pel√≠culas
- **Votaciones** para pel√≠culas
- **Eventos** de visualizaci√≥n grupal

### **Consideraciones para futuras implementaciones:**

- **Mantener compatibilidad** con funcionalidad actual
- **No romper permisos existentes**
- **Agregar funcionalidades opcionales**
- **Probar exhaustivamente** antes de implementar

---

**üéØ OBJETIVO: Mantener la funcionalidad colaborativa existente mientras se agregan nuevas caracter√≠sticas de manera segura y sin interrupciones.**
